# Antenna House Option Setting File.
#
# Copyright 2015-2016 Antenna House, Inc.

default namespace = ""

script.list =
    'Latn'
  | 'Grek'
  | 'Cyrl'
  | 'Arab'
  | 'Hebr'
  | 'Deva'
  | 'Beng'
  | 'Guru'
  | 'Gujr'
  | 'Orya'
  | 'Taml'
  | 'Telu'
  | 'Knda'
  | 'Mlym'
  | 'Sinh'
  | 'Thai'
  | 'Khmr'
  | 'Laoo'
  | 'Myanmar'
  | 'Hang'
  | 'Hans'
  | 'Hant'
  | 'Jpan'
  | 'Hrkt'
  | '.'
  | ''

start = formatter-config

formatter-config =
  element formatter-config {
    formatter-settings?,
    font-settings?,
    pdf-settings?,
    ps-settings?,
    rxe-settings?,
    svg-settings?,
    inx-settings?,
    mif-settings?,
    text-settings?,
    mathml-settings?,
    xslt-settings?
    }
    
formatter-settings =
    element formatter-settings {
      attribute abbreviation-character-count { xsd:integer }?,
      attribute auto-break-footnote { 'true' | 'false' }?,
      attribute auto-formatter-type { 'html' | 'xhtml' }?,
      attribute avoid-widow-words-CJK-punctuation { 'true' | 'false' },
      ## Whether <axf:formatter-config> is allowed
      attribute axf-formatter-config { 'true' | 'false' }?,
      ## Mode for handling baselines of mixed scripts: 4 = AH Formatter V4; 5 = AH Formatter V5; 6 = AH Formatter V6
      attribute baseline-mode { '4' | '5' | '6' }?,
      attribute bidi-override-mode { xsd:integer }?,
      attribute bold-ratio { xsd:decimal }?,
      attribute border-medium-width { xsd:NMTOKEN }?,
      attribute border-thick-width { xsd:NMTOKEN }?,
      attribute border-thin-width { xsd:NMTOKEN }?,
      attribute css-media-type { xsd:NCName }?,
      attribute default-CJK { xsd:NCName }?,
      attribute default-color { text }?,
      attribute default-font-size { xsd:NMTOKEN }?,
      attribute default-from-page-master-region { 'false' | 'true' }?,
      attribute default-html-charset { xsd:NCName }?,
      attribute default-lang { text }?,
      attribute default-lang2 { xsd:NCName }?,
      attribute default-page-height { xsd:NMTOKEN }?,
      attribute default-page-margin-bottom { text }?,
      attribute default-page-margin-left { text }?,
      attribute default-page-margin-right { text }?,
      attribute default-page-margin-top { text }?,
      attribute default-page-width { xsd:NMTOKEN }?,
      ## How strictly to check 'font-family' syntax: auto | loose | strict
      attribute family-name-syntax { 'auto' | 'loose' | 'strict' }?,
      attribute fixed-width-space-treatment { 'false' | 'true' }?,
      attribute hair-space-width { text }?,
      ## Whether to enable <hyphen-min> in the Hyphenation Exception Dictionary: false | true | without-exceptions
      attribute hyphenation-min { 'false' | 'true' | 'without-exceptions' }?,
      ## Whether to use custom hyphenation processing or TeX hyphenation dictionaries: 'true' | 'false'
      attribute HyphenationOption { 'true' | 'false' }?,
      ## Comma-delimited list of languages to hyphenate when HyphenationOption="true"
      attribute hyphenation-TeX { text }?,
      attribute intrusion-displace-mode { xsd:integer }?,
      attribute issue-scale-to-fit { 'false' | 'true' }?,
      attribute justify-leader { 'false' | 'true' }?,
      attribute latin-ligature { 'false' | 'true' }?,
      attribute non-starter-ideographic-space { 'false' | 'true' }?,
      attribute normal-line-height { text }?,
      attribute normalize { xsd:NCName }?,
      attribute oblique-skew { xsd:integer }?,
      attribute omit-uppercase-word-accents { text }?,
      attribute output-fo-tree { 'false' | 'true' }?,
      attribute overflow-limit-block { xsd:NMTOKEN }?,
      attribute overflow-limit-inline { xsd:NMTOKEN }?,
      attribute pair-kerning { 'false' | 'true' }?,
      attribute printer-marks-line-length { text }?,
      attribute printer-marks-line-width { text }?,
      attribute printer-marks-zero-margin { text }?,
      attribute PrinterOrientation { xsd:NCName }?,
      attribute PscriptPassThrough { 'false' | 'true' }?,
      attribute punctuation-spacing { text }?,
      attribute punctuation-trim { 'false' | 'true' }?,
      attribute pxpi { xsd:integer }?,
      attribute ruby-align { text }?,
      attribute small-caps-emulation-size { text }?,
      attribute SeparatePrinterDuplexJob { 'false' | 'true' }?,
      attribute SVGViewer { 'false' | 'true' }?,
      attribute table-auto-layout-limit { xsd:integer }?,
      attribute table-is-reference-area { 'false' | 'true' }?,
      attribute text-autospace { 'false' | 'true' }?,
      attribute text-autospace-width { text }?,
      attribute text-decoration-baseline-mode { xsd:integer }?,
      attribute text-decoration-mode { xsd:integer }?,
      attribute text-justify-mode { xsd:integer }?,
      attribute text-kashida-space { text }?,
      attribute text-orientation-mode { xsd:integer }?,
      attribute text-underline-mode { xsd:integer }?,
      attribute thin-space-width { text }?,
      attribute two-pass-formatting { 'false' | 'true' }?,
      attribute use-default-page-margin-CSS { 'false' | 'true' }?,
      attribute use-default-page-margin-XSL { 'false' | 'true' }?,
      attribute vertical-block-width-mode { xsd:integer }?,
      attribute vertical-underline-side { xsd:NCName }?,
      attribute viewport-length-units-mode { xsd:integer }?,
      attribute WindowsFontAPI { text }?,
      ## ZERO WIDTH SPACE (U+200B) compatibility mode: 5 | 6
      attribute zwsp-mode { '5' | '6' }?
    }
    
font-settings =
    ## Settings for fonts
    element font-settings {
       attribute auto-fallback-font { 'false' | 'true' }?,
       ## Font for a linear barcode
       attribute barcode-text-font { 'OCRB' | 'monospace' }?,
       ## Default font family
       attribute default-font-family { xsd:NCName }?,
       ## Whether, and at what level, to report when a glyph is not found in a fallback font
       attribute fallback-glyph { '0' | '1' | '2' }?,
       ## Font selection method: 5 = disregard 'font-selection-strategy'; 6 = act on 'font-selection-strategy="character-by-character"'
       attribute font-selection-mode { '5' | '6' }?,
       attribute font-selection-strategy { xsd:NCName }?,
       attribute font-stretch-mode { xsd:integer }?,
       attribute missing-font { xsd:integer }?,
       ## Whether to warn when glyph not found: [ = no message; 1 = level 1 error message; 2 = level 2 error message
       attribute missing-glyph { '0' | '1' | '2' }?,
       attribute missing-glyph-all { 'false' | 'true' }?,
       attribute use-windows-api { 'false' | 'true' }?,
       ## Generic font mapping for a script
       element script-font {
         ## Generic cursive font for script
         attribute cursive { text }?,
         ## Generic fallback font for script
         attribute fallback { text }?,
         ## Generic fantasy font for script
         attribute fantasy { text }?,
         ## Generic monospace font for script
         attribute monospace { text }?,
         ## Generic sans-serif font for script
         attribute sans-serif { text }?,
         ## Script code
         attribute script { script.list }?,
         ## Generic serif font for script
         attribute serif { text }?,
         empty
       }*,
       element font-alias {
         ## Name of font to alias
         attribute src { text },
         ## Name of font to use in place of source font
         attribute dst { text }
       }*
     }

pdf-settings =
     element pdf-settings {
         ## Whether JavaScript specified by openaction or axf:action-type is enabled: true | false
         attribute allow-javascript { 'true' | 'false' }?,
         attribute certificate-name { xsd:NCName }?,
         attribute color-profile { text }?,
         attribute convert-colorspace { 'false' | 'true' }?,
         attribute default-output-intent { text }?,
         ## Whether to embed all embeddable fonts in PDF: false | true | base14
         attribute embed-all-fonts { 'false' | 'true' | 'base14' }?,
         attribute embed-font-encoding { text }?,
         attribute embed-std-output-intent { 'false' | 'true' }?,
         attribute embed-subset-font-percentage { xsd:integer }?,
         attribute encryption-level { xsd:NMTOKEN }?,
         attribute EPS-processor { xsd:NCName }?,
         attribute error-on-embed-fault { 'false' | 'true' }?,
         attribute error-on-missing-glyph { 'false' | 'true' }?,
         attribute error-on-pdfx-fault { 'false' | 'true' }?,
         attribute error-on-tagged-pdf-fault { 'false' | 'true' }?,
         attribute ghostscript { text }?,
         attribute gif-pass-through { 'false' | 'true' }?,
         attribute grayscale-compression { xsd:NCName }?,
         attribute grayscale-downsampling { xsd:NCName }?,
         attribute grayscale-downsampling-above-dpi { xsd:integer }?,
         attribute grayscale-downsampling-target-dpi { xsd:integer }?,
         attribute grayscale-jpeg-quality { xsd:integer }?,
         attribute gs-add-options { text }?,
         attribute image-color-profile { 'false' | 'true' }?,
         attribute image-compression { xsd:NCName }?,
         attribute image-downsampling { xsd:NCName }?,
         attribute image-downsampling-above-dpi { xsd:integer }?,
         attribute image-downsampling-target-dpi { xsd:integer }?,
         attribute import-3D-annotation { 'false' | 'true' }?,
         attribute import-3Dannotation { 'false' | 'true' }?,
         attribute import-annotation-types { text }?,
         attribute import-tagged-pdf { 'false' | 'true' }?,
         attribute import-textmarkup-annotation { 'false' | 'true' }?,
         attribute joboptions { text }?,
         attribute jpeg-quality { xsd:integer }?,
         attribute linearized { 'false' | 'true' }?,
         attribute monochrome-compression { xsd:NCName }?,
         attribute monochrome-downsampling { xsd:NCName }?,
         attribute monochrome-downsampling-above-dpi { xsd:integer }?,
         attribute monochrome-downsampling-target-dpi { xsd:integer }?,
         ## Whether to embed multimedia in PDF when axf:multimedia-treatment="auto": embed | absolute-link | relative-link | richmedia | richmedia-windowed
         attribute multimedia-treatment { 'embed' | 'absolute-link' | 'relative-link' | 'richmedia' | 'richmedia-windowed' }?,
         attribute new-tagging-mode { 'false' | 'true' }?,
         ## Whether to permit text access for screen reader devices of PDF files: false | true
         attribute no-accessibility { 'false' | 'true' }?,
         attribute no-adding-or-changing-comments { 'false' | 'true' }?,
         attribute no-assemble-doc { 'false' | 'true' }?,
         attribute no-changing { 'false' | 'true' }?,
         attribute no-content-copying { 'false' | 'true' }?,
         attribute no-fill-form { 'false' | 'true' }?,
         attribute object-compression { 'false' | 'true' }?,
         attribute overprint { xsd:NCName }?,
         attribute page-labels { 'false' | 'true' }?,
         attribute pdf-version { text }?,
         attribute printing-allowed { xsd:NCName }?,
         attribute rasterize-resolution { xsd:integer }?,
         attribute reverse-page { 'false' | 'true' }?,
         attribute rgb-conversion { xsd:NCName }?,
         attribute signature { 'false' | 'true' }?,
         attribute signature-name { xsd:NCName }?,
         attribute tagged-pdf { 'false' | 'true' }?,
         attribute text-and-lineart-compression { 'false' | 'true' }?,
         attribute transparency-color-space { xsd:NCName }?,
         attribute use-launch-for-relative-uri { 'false' | 'true' }?,
         pdf-settings.model
}

pdf-settings.model =
   (embed-font*, (tag-role-map, embed-font*)?)

embed-font =
   element embed-font {
           attribute font { text }
   }

tag-role-map =
   element tag-role-map {
      tag-element+
   }

tag-element =
   element tag-element {
      attribute tag-base-name { token },
      attribute tag-derived-name { token },
      empty
   }

ps-settings =
    element ps-settings {
      attribute noembed-font { 'false' | 'true' }
    }

inx-settings =
    element inx-settings {
       attribute block-newline { 'false' | 'true' }?,
       attribute output-mode { xsd:NCName }
     }
mathml-settings =
    element mathml-settings {
         attribute double_struck { xsd:NCName }?,
         attribute error-display { xsd:NCName }?,
         attribute fraktur { xsd:NCName }?,
         attribute mode { xsd:NCName }?,
         attribute monospace { xsd:NCName }?,
         attribute opspace-multiplier { xsd:decimal }?,
         attribute sans-serif { xsd:NCName }?,
         attribute script { xsd:NCName }?,
         attribute script-maxnest { xsd:integer }?,
         attribute scriptminsize { xsd:NMTOKEN }?,
         attribute scriptsizemultiplier { xsd:decimal }?,
         (element variant-font {
            attribute fontfamily { text },
            attribute mathvariant { xsd:NCName }
          }
          | (element math {
               attribute axis-shift { xsd:integer },
               attribute big { text },
               attribute normal { xsd:integer },
               attribute small { text }
             },
             element mfenced {
               attribute center-shift { xsd:integer }
             },
             element mfrac {
               attribute bar-lspace { text },
               attribute bar-padding { text },
               attribute bar-rspace { text },
               attribute bar-width { text },
               attribute denominator-space { text },
               attribute italic-lspace { xsd:integer }?,
               attribute italic-rspace { xsd:decimal }?,
               attribute medium { xsd:integer },
               attribute neumerator-space { text }?,
               attribute numerator-space { xsd:decimal }?,
               attribute thick { text },
               attribute thin { text }
             },
             element mi {
               attribute italic-lspace { xsd:decimal },
               attribute italic-rspace { text }
             },
             element mo {
               attribute adjust-largeop-space { xsd:decimal }?,
               attribute default-space { xsd:decimal }?,
               attribute integral-bottom-width { xsd:decimal }?,
               attribute integral-italic { 'false' | 'true' }?,
               attribute integral-largeop { xsd:integer }?,
               attribute integral-largeop-bottom-width { xsd:decimal }?,
               attribute integral-largeop-subscript-shift {
                 xsd:decimal
               }?,
               attribute integral-largeop-superscript-shift {
                 xsd:decimal
               }?,
               attribute integral-largeop-top-width { xsd:decimal }?,
               attribute integral-subscript-shift { xsd:decimal }?,
               attribute integral-superscript-shift { xsd:decimal }?,
               attribute integral-top-width { xsd:decimal }?,
               attribute largeop { text },
               attribute largeop-integral { xsd:integer }?,
               attribute largeop-subscript-shift { xsd:integer }?,
               attribute largeop-superscript-shift { xsd:decimal }?,
               attribute paren-bottom { xsd:NCName }?,
               attribute paren-top { xsd:NCName }?,
               attribute paren-width-max { xsd:integer }?,
               attribute paren-width-min { xsd:decimal }?,
               attribute paren-width-scale { xsd:decimal }?,
               attribute paren-width-step { 'false' | 'true' }?,
               attribute subscript-shift { xsd:integer }?,
               attribute superscript-shift { xsd:decimal }?
             },
             element mroot {
               attribute index-rspace { text },
               attribute index-shift { text },
               attribute padding-bottom { xsd:integer },
               attribute padding-left { xsd:integer },
               attribute padding-right { xsd:integer },
               attribute padding-top { text },
               attribute root-pos1.x { xsd:integer },
               attribute root-pos1.y { text },
               attribute root-pos2.x { text },
               attribute root-pos2.y { text },
               attribute root-pos3.x { text },
               attribute root-pos3.y { text },
               attribute root-pos4.x { text },
               attribute root-pos4.y { text },
               attribute root-width1 { text },
               attribute root-width2 { text },
               attribute root-width3 { text },
               attribute root-width4 { text }
             },
             element mscript {
               attribute presubscript-italic-shift { text },
               attribute presuperscript-italic-shift { text },
               attribute script-lspace { text },
               attribute script-lspace2 { text },
               attribute script-rspace { text },
               attribute script-rspace2 { text },
               attribute subscript-italic-shift { text },
               attribute subscript-shift { xsd:integer },
               attribute superscript-italic-shift { text },
               attribute superscript-shift { xsd:integer }
             },
             element mstyle {
               attribute background { xsd:NCName },
               attribute displaystyle { 'false' | 'true' },
               attribute mediummathspace { text },
               attribute scriptlevel { xsd:integer },
               attribute scriptminsize { xsd:NMTOKEN },
               attribute scriptsizemultiplier { text },
               attribute thickmathspace { text },
               attribute thinmathspace { text },
               attribute verythickmathspace { text },
               attribute verythinmathspace { text },
               attribute veryverythickmathspace { text },
               attribute veryverythinmathspace { text }
             },
             element mtable {
               attribute border-width { text }
             },
             element munderover {
               attribute bar-padding { text },
               attribute bar-width { text },
               attribute integral-largeop-overscript-space {
                 xsd:decimal
               }?,
               attribute integral-largeop-underscript-space {
                 xsd:decimal
               }?,
               attribute integral-overscript-space { xsd:decimal }?,
               attribute integral-underscript-space { xsd:decimal }?,
               attribute limit-size { text },
               attribute overaccent-shift { text },
               attribute overbar-space { text },
               attribute overscript-space { text },
               attribute tendsto-arror-variable { 'false' | 'true' }?,
               attribute underaccent-shift { text },
               attribute underbar-space { text },
               attribute underscript-space { text }
             }))?
       }

mif-settings =
    element mif-settings {
         attribute char-units { xsd:NCName },
         attribute image-processing { xsd:NCName }?,
         attribute output-mode { xsd:NCName },
         attribute units { xsd:NCName }
       }

rxe-settings =
       element rxe-settings { empty }

svg-settings =
     element svg-settings {
         attribute base-uri { text },
         attribute copy-image-path { text },
         attribute copy-image-prefix { text },
         attribute embed-all-fonts { 'false' | 'true' },
         attribute encoding { text },
         attribute error-on-embed-fault { 'false' | 'true' },
         attribute format { text },
         attribute gzip-compression { 'false' | 'true' },
         attribute image-conversion { xsd:NCName },
         attribute image-downsampling-dpi { text },
         attribute image-downsampling-method { xsd:integer },
         attribute image-processing { xsd:NCName },
         attribute jpeg-quality { xsd:integer },
         attribute rasterize-resolution { xsd:integer },
         attribute rename-copy-image { 'false' | 'true' },
         attribute single-file-max-height { text },
         attribute single-file-max-pages { xsd:integer },
         attribute single-page-number { 'false' | 'true' },
         attribute singlefile { 'false' | 'true' },
         attribute svg-version { xsd:decimal }
       }

text-settings =
     element text-settings { empty }
     
xslt-settings =
     element xslt-settings {
         attribute command { text }?,
         attribute msxml { 'false' | 'true' },
         attribute param-option { text }?,
         element param {
           attribute name { xsd:NCName },
           attribute value { xsd:anyURI }
         }?
       }

